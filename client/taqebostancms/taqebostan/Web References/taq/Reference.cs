//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.3053
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 2.0.50727.3053.
// 
#pragma warning disable 1591

namespace taqebostan.taq {
    using System.Diagnostics;
    using System.Web.Services;
    using System.ComponentModel;
    using System.Web.Services.Protocols;
    using System;
    using System.Xml.Serialization;
    using System.Data;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="ManagementSoap", Namespace="http://tempuri.org/")]
    public partial class Management : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback SetLegalOperationCompleted;
        
        private System.Threading.SendOrPostCallback SetDaysLeftOperationCompleted;
        
        private System.Threading.SendOrPostCallback UploadFileOperationCompleted;
        
        private System.Threading.SendOrPostCallback DownloadFileOperationCompleted;
        
        private System.Threading.SendOrPostCallback DownloadFileFoundOperationCompleted;
        
        private System.Threading.SendOrPostCallback SetAdminPwOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAdminPwOperationCompleted;
        
        private System.Threading.SendOrPostCallback GalleryCatchChangesOperationCompleted;
        
        private System.Threading.SendOrPostCallback GalleryImagesListOperationCompleted;
        
        private System.Threading.SendOrPostCallback GalleryImagesDataOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetServerPageOperationCompleted;
        
        private System.Threading.SendOrPostCallback SetServerPageOperationCompleted;
        
        private System.Threading.SendOrPostCallback ReportsPagesViewCountOperationCompleted;
        
        private System.Threading.SendOrPostCallback ContactListOperationCompleted;
        
        private System.Threading.SendOrPostCallback ContactListCatchChangesOperationCompleted;
        
        private System.Threading.SendOrPostCallback CleanAndRepairOperationCompleted;
        
        private System.Threading.SendOrPostCallback NodesAllTreesOperationCompleted;
        
        private System.Threading.SendOrPostCallback NodesAllOperationCompleted;
        
        private System.Threading.SendOrPostCallback NodesAddOperationCompleted;
        
        private System.Threading.SendOrPostCallback NodesEditOperationCompleted;
        
        private System.Threading.SendOrPostCallback NodesEraseOperationCompleted;
        
        private System.Threading.SendOrPostCallback NodesChangeIndexOperationCompleted;
        
        private System.Threading.SendOrPostCallback LayoutWriteOperationCompleted;
        
        private System.Threading.SendOrPostCallback LayoutHomeWriteOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public Management() {
            this.Url = global::taqebostan.Properties.Settings.Default.taqebostan_taq_Management;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event SetLegalCompletedEventHandler SetLegalCompleted;
        
        /// <remarks/>
        public event SetDaysLeftCompletedEventHandler SetDaysLeftCompleted;
        
        /// <remarks/>
        public event UploadFileCompletedEventHandler UploadFileCompleted;
        
        /// <remarks/>
        public event DownloadFileCompletedEventHandler DownloadFileCompleted;
        
        /// <remarks/>
        public event DownloadFileFoundCompletedEventHandler DownloadFileFoundCompleted;
        
        /// <remarks/>
        public event SetAdminPwCompletedEventHandler SetAdminPwCompleted;
        
        /// <remarks/>
        public event GetAdminPwCompletedEventHandler GetAdminPwCompleted;
        
        /// <remarks/>
        public event GalleryCatchChangesCompletedEventHandler GalleryCatchChangesCompleted;
        
        /// <remarks/>
        public event GalleryImagesListCompletedEventHandler GalleryImagesListCompleted;
        
        /// <remarks/>
        public event GalleryImagesDataCompletedEventHandler GalleryImagesDataCompleted;
        
        /// <remarks/>
        public event GetServerPageCompletedEventHandler GetServerPageCompleted;
        
        /// <remarks/>
        public event SetServerPageCompletedEventHandler SetServerPageCompleted;
        
        /// <remarks/>
        public event ReportsPagesViewCountCompletedEventHandler ReportsPagesViewCountCompleted;
        
        /// <remarks/>
        public event ContactListCompletedEventHandler ContactListCompleted;
        
        /// <remarks/>
        public event ContactListCatchChangesCompletedEventHandler ContactListCatchChangesCompleted;
        
        /// <remarks/>
        public event CleanAndRepairCompletedEventHandler CleanAndRepairCompleted;
        
        /// <remarks/>
        public event NodesAllTreesCompletedEventHandler NodesAllTreesCompleted;
        
        /// <remarks/>
        public event NodesAllCompletedEventHandler NodesAllCompleted;
        
        /// <remarks/>
        public event NodesAddCompletedEventHandler NodesAddCompleted;
        
        /// <remarks/>
        public event NodesEditCompletedEventHandler NodesEditCompleted;
        
        /// <remarks/>
        public event NodesEraseCompletedEventHandler NodesEraseCompleted;
        
        /// <remarks/>
        public event NodesChangeIndexCompletedEventHandler NodesChangeIndexCompleted;
        
        /// <remarks/>
        public event LayoutWriteCompletedEventHandler LayoutWriteCompleted;
        
        /// <remarks/>
        public event LayoutHomeWriteCompletedEventHandler LayoutHomeWriteCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SetLegal", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string SetLegal(string oldLegal, string newLegal) {
            object[] results = this.Invoke("SetLegal", new object[] {
                        oldLegal,
                        newLegal});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void SetLegalAsync(string oldLegal, string newLegal) {
            this.SetLegalAsync(oldLegal, newLegal, null);
        }
        
        /// <remarks/>
        public void SetLegalAsync(string oldLegal, string newLegal, object userState) {
            if ((this.SetLegalOperationCompleted == null)) {
                this.SetLegalOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSetLegalOperationCompleted);
            }
            this.InvokeAsync("SetLegal", new object[] {
                        oldLegal,
                        newLegal}, this.SetLegalOperationCompleted, userState);
        }
        
        private void OnSetLegalOperationCompleted(object arg) {
            if ((this.SetLegalCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SetLegalCompleted(this, new SetLegalCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SetDaysLeft", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string SetDaysLeft(string count, string legal) {
            object[] results = this.Invoke("SetDaysLeft", new object[] {
                        count,
                        legal});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void SetDaysLeftAsync(string count, string legal) {
            this.SetDaysLeftAsync(count, legal, null);
        }
        
        /// <remarks/>
        public void SetDaysLeftAsync(string count, string legal, object userState) {
            if ((this.SetDaysLeftOperationCompleted == null)) {
                this.SetDaysLeftOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSetDaysLeftOperationCompleted);
            }
            this.InvokeAsync("SetDaysLeft", new object[] {
                        count,
                        legal}, this.SetDaysLeftOperationCompleted, userState);
        }
        
        private void OnSetDaysLeftOperationCompleted(object arg) {
            if ((this.SetDaysLeftCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SetDaysLeftCompleted(this, new SetDaysLeftCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/UploadFile", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string UploadFile([System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")] byte[] buffer, string name, string legal) {
            object[] results = this.Invoke("UploadFile", new object[] {
                        buffer,
                        name,
                        legal});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void UploadFileAsync(byte[] buffer, string name, string legal) {
            this.UploadFileAsync(buffer, name, legal, null);
        }
        
        /// <remarks/>
        public void UploadFileAsync(byte[] buffer, string name, string legal, object userState) {
            if ((this.UploadFileOperationCompleted == null)) {
                this.UploadFileOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUploadFileOperationCompleted);
            }
            this.InvokeAsync("UploadFile", new object[] {
                        buffer,
                        name,
                        legal}, this.UploadFileOperationCompleted, userState);
        }
        
        private void OnUploadFileOperationCompleted(object arg) {
            if ((this.UploadFileCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UploadFileCompleted(this, new UploadFileCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/DownloadFile", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")]
        public byte[] DownloadFile(string name, string legal) {
            object[] results = this.Invoke("DownloadFile", new object[] {
                        name,
                        legal});
            return ((byte[])(results[0]));
        }
        
        /// <remarks/>
        public void DownloadFileAsync(string name, string legal) {
            this.DownloadFileAsync(name, legal, null);
        }
        
        /// <remarks/>
        public void DownloadFileAsync(string name, string legal, object userState) {
            if ((this.DownloadFileOperationCompleted == null)) {
                this.DownloadFileOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDownloadFileOperationCompleted);
            }
            this.InvokeAsync("DownloadFile", new object[] {
                        name,
                        legal}, this.DownloadFileOperationCompleted, userState);
        }
        
        private void OnDownloadFileOperationCompleted(object arg) {
            if ((this.DownloadFileCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DownloadFileCompleted(this, new DownloadFileCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/DownloadFileFound", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool DownloadFileFound(string name, string legal) {
            object[] results = this.Invoke("DownloadFileFound", new object[] {
                        name,
                        legal});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void DownloadFileFoundAsync(string name, string legal) {
            this.DownloadFileFoundAsync(name, legal, null);
        }
        
        /// <remarks/>
        public void DownloadFileFoundAsync(string name, string legal, object userState) {
            if ((this.DownloadFileFoundOperationCompleted == null)) {
                this.DownloadFileFoundOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDownloadFileFoundOperationCompleted);
            }
            this.InvokeAsync("DownloadFileFound", new object[] {
                        name,
                        legal}, this.DownloadFileFoundOperationCompleted, userState);
        }
        
        private void OnDownloadFileFoundOperationCompleted(object arg) {
            if ((this.DownloadFileFoundCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DownloadFileFoundCompleted(this, new DownloadFileFoundCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SetAdminPw", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string SetAdminPw(string pw, string npw, string legal) {
            object[] results = this.Invoke("SetAdminPw", new object[] {
                        pw,
                        npw,
                        legal});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void SetAdminPwAsync(string pw, string npw, string legal) {
            this.SetAdminPwAsync(pw, npw, legal, null);
        }
        
        /// <remarks/>
        public void SetAdminPwAsync(string pw, string npw, string legal, object userState) {
            if ((this.SetAdminPwOperationCompleted == null)) {
                this.SetAdminPwOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSetAdminPwOperationCompleted);
            }
            this.InvokeAsync("SetAdminPw", new object[] {
                        pw,
                        npw,
                        legal}, this.SetAdminPwOperationCompleted, userState);
        }
        
        private void OnSetAdminPwOperationCompleted(object arg) {
            if ((this.SetAdminPwCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SetAdminPwCompleted(this, new SetAdminPwCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetAdminPw", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetAdminPw(string legal) {
            object[] results = this.Invoke("GetAdminPw", new object[] {
                        legal});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetAdminPwAsync(string legal) {
            this.GetAdminPwAsync(legal, null);
        }
        
        /// <remarks/>
        public void GetAdminPwAsync(string legal, object userState) {
            if ((this.GetAdminPwOperationCompleted == null)) {
                this.GetAdminPwOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAdminPwOperationCompleted);
            }
            this.InvokeAsync("GetAdminPw", new object[] {
                        legal}, this.GetAdminPwOperationCompleted, userState);
        }
        
        private void OnGetAdminPwOperationCompleted(object arg) {
            if ((this.GetAdminPwCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAdminPwCompleted(this, new GetAdminPwCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GalleryCatchChanges", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GalleryCatchChanges(byte[][] buffer, string[] ext, string[] erasedList, string legal) {
            object[] results = this.Invoke("GalleryCatchChanges", new object[] {
                        buffer,
                        ext,
                        erasedList,
                        legal});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GalleryCatchChangesAsync(byte[][] buffer, string[] ext, string[] erasedList, string legal) {
            this.GalleryCatchChangesAsync(buffer, ext, erasedList, legal, null);
        }
        
        /// <remarks/>
        public void GalleryCatchChangesAsync(byte[][] buffer, string[] ext, string[] erasedList, string legal, object userState) {
            if ((this.GalleryCatchChangesOperationCompleted == null)) {
                this.GalleryCatchChangesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGalleryCatchChangesOperationCompleted);
            }
            this.InvokeAsync("GalleryCatchChanges", new object[] {
                        buffer,
                        ext,
                        erasedList,
                        legal}, this.GalleryCatchChangesOperationCompleted, userState);
        }
        
        private void OnGalleryCatchChangesOperationCompleted(object arg) {
            if ((this.GalleryCatchChangesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GalleryCatchChangesCompleted(this, new GalleryCatchChangesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GalleryImagesList", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string[] GalleryImagesList(string legal) {
            object[] results = this.Invoke("GalleryImagesList", new object[] {
                        legal});
            return ((string[])(results[0]));
        }
        
        /// <remarks/>
        public void GalleryImagesListAsync(string legal) {
            this.GalleryImagesListAsync(legal, null);
        }
        
        /// <remarks/>
        public void GalleryImagesListAsync(string legal, object userState) {
            if ((this.GalleryImagesListOperationCompleted == null)) {
                this.GalleryImagesListOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGalleryImagesListOperationCompleted);
            }
            this.InvokeAsync("GalleryImagesList", new object[] {
                        legal}, this.GalleryImagesListOperationCompleted, userState);
        }
        
        private void OnGalleryImagesListOperationCompleted(object arg) {
            if ((this.GalleryImagesListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GalleryImagesListCompleted(this, new GalleryImagesListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GalleryImagesData", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public byte[][] GalleryImagesData(string legal) {
            object[] results = this.Invoke("GalleryImagesData", new object[] {
                        legal});
            return ((byte[][])(results[0]));
        }
        
        /// <remarks/>
        public void GalleryImagesDataAsync(string legal) {
            this.GalleryImagesDataAsync(legal, null);
        }
        
        /// <remarks/>
        public void GalleryImagesDataAsync(string legal, object userState) {
            if ((this.GalleryImagesDataOperationCompleted == null)) {
                this.GalleryImagesDataOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGalleryImagesDataOperationCompleted);
            }
            this.InvokeAsync("GalleryImagesData", new object[] {
                        legal}, this.GalleryImagesDataOperationCompleted, userState);
        }
        
        private void OnGalleryImagesDataOperationCompleted(object arg) {
            if ((this.GalleryImagesDataCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GalleryImagesDataCompleted(this, new GalleryImagesDataCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetServerPage", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")]
        public byte[] GetServerPage(string fullPath, string tbl, string legal) {
            object[] results = this.Invoke("GetServerPage", new object[] {
                        fullPath,
                        tbl,
                        legal});
            return ((byte[])(results[0]));
        }
        
        /// <remarks/>
        public void GetServerPageAsync(string fullPath, string tbl, string legal) {
            this.GetServerPageAsync(fullPath, tbl, legal, null);
        }
        
        /// <remarks/>
        public void GetServerPageAsync(string fullPath, string tbl, string legal, object userState) {
            if ((this.GetServerPageOperationCompleted == null)) {
                this.GetServerPageOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetServerPageOperationCompleted);
            }
            this.InvokeAsync("GetServerPage", new object[] {
                        fullPath,
                        tbl,
                        legal}, this.GetServerPageOperationCompleted, userState);
        }
        
        private void OnGetServerPageOperationCompleted(object arg) {
            if ((this.GetServerPageCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetServerPageCompleted(this, new GetServerPageCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SetServerPage", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string SetServerPage(string fullPath, [System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")] byte[] zipContents, byte[][] buffer, string[] ext, string[] ph, string tbl, string legal) {
            object[] results = this.Invoke("SetServerPage", new object[] {
                        fullPath,
                        zipContents,
                        buffer,
                        ext,
                        ph,
                        tbl,
                        legal});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void SetServerPageAsync(string fullPath, byte[] zipContents, byte[][] buffer, string[] ext, string[] ph, string tbl, string legal) {
            this.SetServerPageAsync(fullPath, zipContents, buffer, ext, ph, tbl, legal, null);
        }
        
        /// <remarks/>
        public void SetServerPageAsync(string fullPath, byte[] zipContents, byte[][] buffer, string[] ext, string[] ph, string tbl, string legal, object userState) {
            if ((this.SetServerPageOperationCompleted == null)) {
                this.SetServerPageOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSetServerPageOperationCompleted);
            }
            this.InvokeAsync("SetServerPage", new object[] {
                        fullPath,
                        zipContents,
                        buffer,
                        ext,
                        ph,
                        tbl,
                        legal}, this.SetServerPageOperationCompleted, userState);
        }
        
        private void OnSetServerPageOperationCompleted(object arg) {
            if ((this.SetServerPageCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SetServerPageCompleted(this, new SetServerPageCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ReportsPagesViewCount", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable ReportsPagesViewCount(string tbl, string legal) {
            object[] results = this.Invoke("ReportsPagesViewCount", new object[] {
                        tbl,
                        legal});
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void ReportsPagesViewCountAsync(string tbl, string legal) {
            this.ReportsPagesViewCountAsync(tbl, legal, null);
        }
        
        /// <remarks/>
        public void ReportsPagesViewCountAsync(string tbl, string legal, object userState) {
            if ((this.ReportsPagesViewCountOperationCompleted == null)) {
                this.ReportsPagesViewCountOperationCompleted = new System.Threading.SendOrPostCallback(this.OnReportsPagesViewCountOperationCompleted);
            }
            this.InvokeAsync("ReportsPagesViewCount", new object[] {
                        tbl,
                        legal}, this.ReportsPagesViewCountOperationCompleted, userState);
        }
        
        private void OnReportsPagesViewCountOperationCompleted(object arg) {
            if ((this.ReportsPagesViewCountCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ReportsPagesViewCountCompleted(this, new ReportsPagesViewCountCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ContactList", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable ContactList(string tbl, string legal) {
            object[] results = this.Invoke("ContactList", new object[] {
                        tbl,
                        legal});
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void ContactListAsync(string tbl, string legal) {
            this.ContactListAsync(tbl, legal, null);
        }
        
        /// <remarks/>
        public void ContactListAsync(string tbl, string legal, object userState) {
            if ((this.ContactListOperationCompleted == null)) {
                this.ContactListOperationCompleted = new System.Threading.SendOrPostCallback(this.OnContactListOperationCompleted);
            }
            this.InvokeAsync("ContactList", new object[] {
                        tbl,
                        legal}, this.ContactListOperationCompleted, userState);
        }
        
        private void OnContactListOperationCompleted(object arg) {
            if ((this.ContactListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ContactListCompleted(this, new ContactListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ContactListCatchChanges", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string ContactListCatchChanges(string tbl, System.Data.DataTable dtList, string legal) {
            object[] results = this.Invoke("ContactListCatchChanges", new object[] {
                        tbl,
                        dtList,
                        legal});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void ContactListCatchChangesAsync(string tbl, System.Data.DataTable dtList, string legal) {
            this.ContactListCatchChangesAsync(tbl, dtList, legal, null);
        }
        
        /// <remarks/>
        public void ContactListCatchChangesAsync(string tbl, System.Data.DataTable dtList, string legal, object userState) {
            if ((this.ContactListCatchChangesOperationCompleted == null)) {
                this.ContactListCatchChangesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnContactListCatchChangesOperationCompleted);
            }
            this.InvokeAsync("ContactListCatchChanges", new object[] {
                        tbl,
                        dtList,
                        legal}, this.ContactListCatchChangesOperationCompleted, userState);
        }
        
        private void OnContactListCatchChangesOperationCompleted(object arg) {
            if ((this.ContactListCatchChangesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ContactListCatchChangesCompleted(this, new ContactListCatchChangesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/CleanAndRepair", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool CleanAndRepair(string legal) {
            object[] results = this.Invoke("CleanAndRepair", new object[] {
                        legal});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void CleanAndRepairAsync(string legal) {
            this.CleanAndRepairAsync(legal, null);
        }
        
        /// <remarks/>
        public void CleanAndRepairAsync(string legal, object userState) {
            if ((this.CleanAndRepairOperationCompleted == null)) {
                this.CleanAndRepairOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCleanAndRepairOperationCompleted);
            }
            this.InvokeAsync("CleanAndRepair", new object[] {
                        legal}, this.CleanAndRepairOperationCompleted, userState);
        }
        
        private void OnCleanAndRepairOperationCompleted(object arg) {
            if ((this.CleanAndRepairCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CleanAndRepairCompleted(this, new CleanAndRepairCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/NodesAllTrees", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet NodesAllTrees(string legal) {
            object[] results = this.Invoke("NodesAllTrees", new object[] {
                        legal});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void NodesAllTreesAsync(string legal) {
            this.NodesAllTreesAsync(legal, null);
        }
        
        /// <remarks/>
        public void NodesAllTreesAsync(string legal, object userState) {
            if ((this.NodesAllTreesOperationCompleted == null)) {
                this.NodesAllTreesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnNodesAllTreesOperationCompleted);
            }
            this.InvokeAsync("NodesAllTrees", new object[] {
                        legal}, this.NodesAllTreesOperationCompleted, userState);
        }
        
        private void OnNodesAllTreesOperationCompleted(object arg) {
            if ((this.NodesAllTreesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.NodesAllTreesCompleted(this, new NodesAllTreesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/NodesAll", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable NodesAll(string tbl, string legal) {
            object[] results = this.Invoke("NodesAll", new object[] {
                        tbl,
                        legal});
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void NodesAllAsync(string tbl, string legal) {
            this.NodesAllAsync(tbl, legal, null);
        }
        
        /// <remarks/>
        public void NodesAllAsync(string tbl, string legal, object userState) {
            if ((this.NodesAllOperationCompleted == null)) {
                this.NodesAllOperationCompleted = new System.Threading.SendOrPostCallback(this.OnNodesAllOperationCompleted);
            }
            this.InvokeAsync("NodesAll", new object[] {
                        tbl,
                        legal}, this.NodesAllOperationCompleted, userState);
        }
        
        private void OnNodesAllOperationCompleted(object arg) {
            if ((this.NodesAllCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.NodesAllCompleted(this, new NodesAllCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/NodesAdd", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string NodesAdd(string node, string parent, string fullPath, int zIndex, string tbl, string legal) {
            object[] results = this.Invoke("NodesAdd", new object[] {
                        node,
                        parent,
                        fullPath,
                        zIndex,
                        tbl,
                        legal});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void NodesAddAsync(string node, string parent, string fullPath, int zIndex, string tbl, string legal) {
            this.NodesAddAsync(node, parent, fullPath, zIndex, tbl, legal, null);
        }
        
        /// <remarks/>
        public void NodesAddAsync(string node, string parent, string fullPath, int zIndex, string tbl, string legal, object userState) {
            if ((this.NodesAddOperationCompleted == null)) {
                this.NodesAddOperationCompleted = new System.Threading.SendOrPostCallback(this.OnNodesAddOperationCompleted);
            }
            this.InvokeAsync("NodesAdd", new object[] {
                        node,
                        parent,
                        fullPath,
                        zIndex,
                        tbl,
                        legal}, this.NodesAddOperationCompleted, userState);
        }
        
        private void OnNodesAddOperationCompleted(object arg) {
            if ((this.NodesAddCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.NodesAddCompleted(this, new NodesAddCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/NodesEdit", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string NodesEdit(string node, string newNode, string fullPath, string newFullPath, string tbl, string legal) {
            object[] results = this.Invoke("NodesEdit", new object[] {
                        node,
                        newNode,
                        fullPath,
                        newFullPath,
                        tbl,
                        legal});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void NodesEditAsync(string node, string newNode, string fullPath, string newFullPath, string tbl, string legal) {
            this.NodesEditAsync(node, newNode, fullPath, newFullPath, tbl, legal, null);
        }
        
        /// <remarks/>
        public void NodesEditAsync(string node, string newNode, string fullPath, string newFullPath, string tbl, string legal, object userState) {
            if ((this.NodesEditOperationCompleted == null)) {
                this.NodesEditOperationCompleted = new System.Threading.SendOrPostCallback(this.OnNodesEditOperationCompleted);
            }
            this.InvokeAsync("NodesEdit", new object[] {
                        node,
                        newNode,
                        fullPath,
                        newFullPath,
                        tbl,
                        legal}, this.NodesEditOperationCompleted, userState);
        }
        
        private void OnNodesEditOperationCompleted(object arg) {
            if ((this.NodesEditCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.NodesEditCompleted(this, new NodesEditCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/NodesErase", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string NodesErase(string fullPath, string parentPath, string tbl, string legal) {
            object[] results = this.Invoke("NodesErase", new object[] {
                        fullPath,
                        parentPath,
                        tbl,
                        legal});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void NodesEraseAsync(string fullPath, string parentPath, string tbl, string legal) {
            this.NodesEraseAsync(fullPath, parentPath, tbl, legal, null);
        }
        
        /// <remarks/>
        public void NodesEraseAsync(string fullPath, string parentPath, string tbl, string legal, object userState) {
            if ((this.NodesEraseOperationCompleted == null)) {
                this.NodesEraseOperationCompleted = new System.Threading.SendOrPostCallback(this.OnNodesEraseOperationCompleted);
            }
            this.InvokeAsync("NodesErase", new object[] {
                        fullPath,
                        parentPath,
                        tbl,
                        legal}, this.NodesEraseOperationCompleted, userState);
        }
        
        private void OnNodesEraseOperationCompleted(object arg) {
            if ((this.NodesEraseCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.NodesEraseCompleted(this, new NodesEraseCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/NodesChangeIndex", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string NodesChangeIndex(string fullPath, int newIndex, string besidePath, int oldIndex, string tbl, string legal) {
            object[] results = this.Invoke("NodesChangeIndex", new object[] {
                        fullPath,
                        newIndex,
                        besidePath,
                        oldIndex,
                        tbl,
                        legal});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void NodesChangeIndexAsync(string fullPath, int newIndex, string besidePath, int oldIndex, string tbl, string legal) {
            this.NodesChangeIndexAsync(fullPath, newIndex, besidePath, oldIndex, tbl, legal, null);
        }
        
        /// <remarks/>
        public void NodesChangeIndexAsync(string fullPath, int newIndex, string besidePath, int oldIndex, string tbl, string legal, object userState) {
            if ((this.NodesChangeIndexOperationCompleted == null)) {
                this.NodesChangeIndexOperationCompleted = new System.Threading.SendOrPostCallback(this.OnNodesChangeIndexOperationCompleted);
            }
            this.InvokeAsync("NodesChangeIndex", new object[] {
                        fullPath,
                        newIndex,
                        besidePath,
                        oldIndex,
                        tbl,
                        legal}, this.NodesChangeIndexOperationCompleted, userState);
        }
        
        private void OnNodesChangeIndexOperationCompleted(object arg) {
            if ((this.NodesChangeIndexCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.NodesChangeIndexCompleted(this, new NodesChangeIndexCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/LayoutWrite", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string LayoutWrite(string layout, string legal) {
            object[] results = this.Invoke("LayoutWrite", new object[] {
                        layout,
                        legal});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void LayoutWriteAsync(string layout, string legal) {
            this.LayoutWriteAsync(layout, legal, null);
        }
        
        /// <remarks/>
        public void LayoutWriteAsync(string layout, string legal, object userState) {
            if ((this.LayoutWriteOperationCompleted == null)) {
                this.LayoutWriteOperationCompleted = new System.Threading.SendOrPostCallback(this.OnLayoutWriteOperationCompleted);
            }
            this.InvokeAsync("LayoutWrite", new object[] {
                        layout,
                        legal}, this.LayoutWriteOperationCompleted, userState);
        }
        
        private void OnLayoutWriteOperationCompleted(object arg) {
            if ((this.LayoutWriteCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.LayoutWriteCompleted(this, new LayoutWriteCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/LayoutHomeWrite", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string LayoutHomeWrite(string layout, string legal) {
            object[] results = this.Invoke("LayoutHomeWrite", new object[] {
                        layout,
                        legal});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void LayoutHomeWriteAsync(string layout, string legal) {
            this.LayoutHomeWriteAsync(layout, legal, null);
        }
        
        /// <remarks/>
        public void LayoutHomeWriteAsync(string layout, string legal, object userState) {
            if ((this.LayoutHomeWriteOperationCompleted == null)) {
                this.LayoutHomeWriteOperationCompleted = new System.Threading.SendOrPostCallback(this.OnLayoutHomeWriteOperationCompleted);
            }
            this.InvokeAsync("LayoutHomeWrite", new object[] {
                        layout,
                        legal}, this.LayoutHomeWriteOperationCompleted, userState);
        }
        
        private void OnLayoutHomeWriteOperationCompleted(object arg) {
            if ((this.LayoutHomeWriteCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.LayoutHomeWriteCompleted(this, new LayoutHomeWriteCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    public delegate void SetLegalCompletedEventHandler(object sender, SetLegalCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SetLegalCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SetLegalCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    public delegate void SetDaysLeftCompletedEventHandler(object sender, SetDaysLeftCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SetDaysLeftCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SetDaysLeftCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    public delegate void UploadFileCompletedEventHandler(object sender, UploadFileCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UploadFileCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UploadFileCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    public delegate void DownloadFileCompletedEventHandler(object sender, DownloadFileCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DownloadFileCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DownloadFileCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public byte[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((byte[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    public delegate void DownloadFileFoundCompletedEventHandler(object sender, DownloadFileFoundCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DownloadFileFoundCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DownloadFileFoundCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    public delegate void SetAdminPwCompletedEventHandler(object sender, SetAdminPwCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SetAdminPwCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SetAdminPwCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    public delegate void GetAdminPwCompletedEventHandler(object sender, GetAdminPwCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAdminPwCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAdminPwCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    public delegate void GalleryCatchChangesCompletedEventHandler(object sender, GalleryCatchChangesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GalleryCatchChangesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GalleryCatchChangesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    public delegate void GalleryImagesListCompletedEventHandler(object sender, GalleryImagesListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GalleryImagesListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GalleryImagesListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    public delegate void GalleryImagesDataCompletedEventHandler(object sender, GalleryImagesDataCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GalleryImagesDataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GalleryImagesDataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public byte[][] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((byte[][])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    public delegate void GetServerPageCompletedEventHandler(object sender, GetServerPageCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetServerPageCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetServerPageCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public byte[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((byte[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    public delegate void SetServerPageCompletedEventHandler(object sender, SetServerPageCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SetServerPageCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SetServerPageCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    public delegate void ReportsPagesViewCountCompletedEventHandler(object sender, ReportsPagesViewCountCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ReportsPagesViewCountCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ReportsPagesViewCountCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    public delegate void ContactListCompletedEventHandler(object sender, ContactListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ContactListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ContactListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    public delegate void ContactListCatchChangesCompletedEventHandler(object sender, ContactListCatchChangesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ContactListCatchChangesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ContactListCatchChangesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    public delegate void CleanAndRepairCompletedEventHandler(object sender, CleanAndRepairCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CleanAndRepairCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CleanAndRepairCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    public delegate void NodesAllTreesCompletedEventHandler(object sender, NodesAllTreesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class NodesAllTreesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal NodesAllTreesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    public delegate void NodesAllCompletedEventHandler(object sender, NodesAllCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class NodesAllCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal NodesAllCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    public delegate void NodesAddCompletedEventHandler(object sender, NodesAddCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class NodesAddCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal NodesAddCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    public delegate void NodesEditCompletedEventHandler(object sender, NodesEditCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class NodesEditCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal NodesEditCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    public delegate void NodesEraseCompletedEventHandler(object sender, NodesEraseCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class NodesEraseCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal NodesEraseCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    public delegate void NodesChangeIndexCompletedEventHandler(object sender, NodesChangeIndexCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class NodesChangeIndexCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal NodesChangeIndexCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    public delegate void LayoutWriteCompletedEventHandler(object sender, LayoutWriteCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class LayoutWriteCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal LayoutWriteCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    public delegate void LayoutHomeWriteCompletedEventHandler(object sender, LayoutHomeWriteCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class LayoutHomeWriteCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal LayoutHomeWriteCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591